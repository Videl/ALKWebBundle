<?php

namespace ALK\WebBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Gedmo\Mapping\Annotation as Gedmo;


/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
	public function findTitleById($id)
	{
		$repository = $this->getDoctrine()
    		->getRepository('ALKWebBundle:Article');

		$query = $repository->createQueryBuilder()
			->select('partial Article.{title}')
			->where('id = :id')
			->setParameter('id', $id)
			->getQuery();

	    try {
	        return $query->getSingleResult();
	    } catch (\Doctrine\ORM\NoResultException $e) {
	        return null;
	    }
	}

	public function myFindAllArticles()
    {
        $qb = $this->createQueryBuilder('a');
        $qb->add('orderBy', 'a.id DESC');


        return $qb->getQuery()->getResult();
    }

    public function myLastArticle()
    {
        return $this->findBy(array(), array('id'=>'DESC'), 1);
    }

    public function myFindBySlug($slug)
    {

        $query = $this->getEntityManager()
        ->createQuery('
            SELECT a FROM ALKWebBundle:Article a
            WHERE a.slug = :slug')
        ->setParameter('slug', $slug)
        ->setHint(\Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER, 
            'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
        );

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }


    public function myFindByTags(array $nom_tags)
    {
        $qb = $this->createQueryBuilder('a');

        $qb ->join('a.category', 't')
            ->where($qb->expr()->in('t.name', $nom_tags))
            ->add('orderBy', 'a.id DESC');

        return $qb->getQuery()
                   ->getResult();
    }

}
